name: "Hello World"
description: "Greet someone"
inputs:
  graphql:
    description: "GraphQL query"
    required: true
  jq:
    description: "jq filter"
    required: false
    default: ".data"
  slack-channel:
    description: "The Slack channel to post to"
    required: true
outputs:
  graphql:
    description: "The output of the graphql query"
    value: ${{ steps.graphql-query.outputs.graphql-output }}
  jq:
    description: "The output of the graphql query"
    value: ${{ steps.jq-filter.outputs.jq-output }}
runs:
  using: "composite"
  steps:
    - id: graphql-query
      name: "Execute GraphQL query"
      run: |
        ESCAPED_QUERY=${QUERY//'"'/'\"'}
        printf '{"query": "%s"}' "$ESCAPED_QUERY" > graphql-input.json
        curl https://api.github.com/graphql  \
          --silent \
          --header "Authorization: token $GITHUB_TOKEN" \
          --header "Content-Type: application/json" \
          --data '@graphql-input.json' > graphql-output.json
        echo "::set-output name=graphql-output::$(cat graphql-output.json)"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        QUERY: ${{ inputs.graphql }}
    - id: jq-filter
      name: "Filter with jq"
      run: |
        cat graphql-output.json | jq --compact-output 'include "${{ github.action_path }}/jq/slack.jq"; ${{ inputs.jq }}' > jq-output.json
        echo "::set-output name=jq-output::$(cat jq-output.json)"
      shell: bash
    - id: post-to-slack
      name: "Post to Slack"
      run: |
        printf '{ "channel": "${{ inputs.slack-channel }}", "blocks": %s }' "$BLOCKS" > slack-input.json
        curl https://slack.com/api/chat.postMessage \
          --header "Content-type: application/json" \
          --header "Authorization: Bearer $SLACK_TOKEN" \
          --data '@slack-input.json'
      shell: bash
      env:
        SLACK_TOKEN: ${{ env.SLACK_TOKEN }}
        BLOCKS: ${{ steps.jq-filter.outputs.jq-output }}
